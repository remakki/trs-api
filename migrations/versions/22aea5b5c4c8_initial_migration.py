"""Initial migration

Revision ID: 22aea5b5c4c8
Revises: 
Create Date: 2025-09-28 22:13:09.514711

"""
from typing import Sequence, Union

import advanced_alchemy
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '22aea5b5c4c8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('digests',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('summary', sa.String(), nullable=False),
    sa.Column('start_time', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('end_time', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('type', sa.Enum('DAILY', 'CUSTOM', name='digest_type'), nullable=False),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_digests'))
    )
    op.create_table('sources',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('archive_url', sa.String(), nullable=False),
    sa.Column('archive_token', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sources'))
    )
    op.create_table('tags',
    sa.Column('name', sa.String(length=127), nullable=False),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tags')),
    sa.UniqueConstraint('name', name=op.f('uq_tags_name'))
    )
    op.create_table('storylines',
    sa.Column('start_time', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('end_time', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('summary', sa.String(), nullable=False),
    sa.Column('summary_ru', sa.String(), nullable=False),
    sa.Column('temperature', sa.String(), nullable=False),
    sa.Column('source_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], name=op.f('fk_storylines_source_id_sources')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storylines'))
    )
    op.create_table('digests_storylines',
    sa.Column('digest_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('storyline_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['digest_id'], ['digests.id'], name=op.f('fk_digests_storylines_digest_id_digests'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['storyline_id'], ['storylines.id'], name=op.f('fk_digests_storylines_storyline_id_storylines'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('digest_id', 'storyline_id', name=op.f('pk_digests_storylines'))
    )
    op.create_table('storylines_tags',
    sa.Column('storyline_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('tag_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['storyline_id'], ['storylines.id'], name=op.f('fk_storylines_tags_storyline_id_storylines'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_storylines_tags_tag_id_tags'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('storyline_id', 'tag_id', name=op.f('pk_storylines_tags'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('storylines_tags')
    op.drop_table('digests_storylines')
    op.drop_table('storylines')
    op.drop_table('tags')
    op.drop_table('sources')
    op.drop_table('digests')
    # ### end Alembic commands ###
